import pandas as pd
import os

# Define file paths
file_paths = {
    "League Schedule": "data/LeagueSchedule24_25.csv",
    "Players": "data/Players.csv",
    "Team Histories": "data/TeamHistories.csv",
    "Player Statistics": "data/PlayerStatistics (1).xlsx",
    "Games": "data/Games.csv"
}

# Function to load and clean CSV files
def clean_csv(file_path):
    try:
        if not os.path.exists(file_path) or os.path.getsize(file_path) == 0:
            print(f"‚ùå Error: {file_path} is missing or empty.")
            return None
        
        df = pd.read_csv(file_path, low_memory=False)

        # Remove duplicate rows
        df.drop_duplicates(inplace=True)

        # Handle missing values
        df.fillna("", inplace=True)

        # Convert column names to lowercase and replace spaces
        df.columns = df.columns.str.lower().str.replace(" ", "_")

        print(f"‚úÖ Cleaned {file_path} ({len(df)} rows)")
        return df
    
    except Exception as e:
        print(f"‚ùå Error cleaning {file_path}: {e}")
        return None

# Function to load and clean Excel files
def clean_excel(file_path):
    try:
        if not os.path.exists(file_path) or os.path.getsize(file_path) == 0:
            print(f"‚ùå Error: {file_path} is missing or empty.")
            return None
        
        df = pd.read_excel(file_path, engine="openpyxl")

        # Remove duplicate rows
        df.drop_duplicates(inplace=True)

        # Handle missing values
        df.fillna("", inplace=True)

        # Convert column names to lowercase and replace spaces
        df.columns = df.columns.str.lower().str.replace(" ", "_")

        print(f"‚úÖ Cleaned {file_path} ({len(df)} rows)")
        return df
    
    except Exception as e:
        print(f"‚ùå Error cleaning {file_path}: {e}")
        return None

# Dictionary to store cleaned DataFrames
cleaned_dataframes = {}

# Clean each dataset
for name, path in file_paths.items():
    if path.endswith(".csv"):
        cleaned_dataframes[name] = clean_csv(path)
    elif path.endswith(".xlsx"):
        cleaned_dataframes[name] = clean_excel(path)

# Save cleaned files back
for name, df in cleaned_dataframes.items():
    if df is not None:
        output_path = f"data/cleaned_{name.replace(' ', '_').lower()}.csv"
        df.to_csv(output_path, index=False)
        print(f"üíæ Saved cleaned dataset: {output_path}")
